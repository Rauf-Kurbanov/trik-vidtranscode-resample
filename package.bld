/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/* If you don't want to redistribute your sources, set this to false. */
Pkg.attrs.exportSrc = false;

/* lib/ is a generated directory that 'xdc clean' should remove */
Pkg.generatedFiles.$add("lib/");

var publicHeader = "trik_vidtranscode_resample.h";

/* Includes */
Pkg.attrs.incs="-I./include -I./libimage/include";

/* Always include the public header file in the generated release archive */
Pkg.otherFiles.$add(publicHeader);

/*
 *  Optionally, you may also want to redistribute these source files,
 *  depending on your customer and delivery scenarios.
 */
/*Pkg.otherFiles.$add("trik_vidtranscode_resample.pdf");*/    /* perhaps some user docs? */
/*Pkg.otherFiles.$add("package.bld");*/             /* XDC build script */

/*
 * Create an array containing the source files needed to build this
 * package.  Note that the extension is added by XDC, so it need
 * not be explicitly specified.
 */
var SRCS = ["src/iface.c",
            "src/iface_helpers.cpp"];

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

    print("building for target " + targ.name + " ...");

    /* Build for all profiles */
    for (var profile in targ.profiles) {

        var libName = "lib/" + profile + "/trik_vidtranscode_resample";
        var fullLibName = libName + '.a' + targ.suffix;

        Pkg.addLibrary(libName, targ, {
            profile: profile
        }).addObjects(SRCS);

        /* and use the QualiTI-provided template to generate .qti scripts */
        var qtiAttrs = [
                "TRIK",               // vendor
                publicHeader,       // headers (relative to base dir)
                "IVIDTRANSCODE_RESAMPLE",     // interface name
                "TRIK_VIDTRANSCODE_RESAMPLE",      // module name,
                fullLibName,        // lib name (relative to base dir)
                "../.."             // base dir (relative to .qti script)
        ];

        xdc.loadTemplate("ti/xdais/qualiti/QtiProject.xdt").genFile(
                fullLibName + '.qti', Pkg, qtiAttrs);

        /* Include the newly generated .qti script to the release */
        Pkg.otherFiles.$add(fullLibName + '.qti');
    }
}
